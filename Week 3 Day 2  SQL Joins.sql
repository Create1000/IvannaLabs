USE sakila;

#Write SQL queries to perform the following tasks using the Sakila database:
#1. List the number of films per category.
SELECT category.name, count(film_category.film_id)
FROM  film_category JOIN category
on film_category.category_id = category.category_id group by(category.name);

#2. Retrieve the store ID, city, and country for each store.
SELECT store_id, city, country
FROM country join city on country.country_id = city.country_id
join address on city.city_id = address.city_id
join store on address.address_id = store.address_id;

#3. Calculate the total revenue generated by each store in dollars.
SELECT store.store_id, SUM(payment.amount)
FROM payment join staff on payment.staff_id = staff.staff_id
join store on staff.store_id = store.store_id group by store.store_id;

#4. Determine the average running time of films for each category.
SELECT category.name, avg(film.length)
FROM category join film_category on category.category_id = film_category.category_id
join film on film_category.film_id = film.film_id group by category.name;

#5. Identify the film categories with the longest average running time.
SELECT AVG(LENGTH), name
FROM FILM JOIN film_category on film.film_id = film_category.film_id join category on film_category.category_id = category.category_id
group by name
order by AVG(LENGTH) desc;

#6. Display the top 10 most frequently rented movies in descending order.
SELECT title
FROM film AS f
JOIN inventory AS inv
ON f.film_id = inv.film_id
JOIN rental as r
ON inv.inventory_id = r.inventory_id
GROUP BY inv.film_id
ORDER BY count(inv.film_id) DESC
LIMIT 10;

#7. Determine if "Academy Dinosaur" can be rented from Store 1.
SELECT IF(COUNT(*) > 0, 'Yes', 'No') AS can_be_rented
FROM film
JOIN inventory USING (film_id)
WHERE film.title LIKE '%Academy Dinosaur%'
AND inventory.store_id = 1;






